// This autogenerates the prisma client in other path for being separated from node_modules
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
  output          = "../client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model InsuranceCompany {
  id   String         @id @default(uuid()) @db.Uuid
  name String
  insurances Insurance[]
}

model Insurance {
  id   String         @id @default(uuid()) @db.Uuid
  type InsuranceType? 
  cost Int
  insuranceCompany InsuranceCompany @relation(fields: [insuranceCompanyId], references: [id])
  insuranceCompanyId String   @db.Uuid
}

model BankCompany {
  id   String         @id @default(uuid()) @db.Uuid
  name String
  bankOffers BankOffer[]
}

model BankOffer {
  id   String         @id @default(uuid()) @db.Uuid
  version Int 
  propertyPrice Decimal
  percentage  Decimal
  requestedAmount Decimal 
  type MortageType 

  bankOfferSimulations BankOfferSimulation []

  bankCompany BankCompany @relation(fields: [bankCompanyId], references: [id])
  bankCompanyId String  @db.Uuid
}

model BankOfferSimulation {
  id   String         @id @default(uuid()) @db.Uuid

  tin Decimal
  tae Decimal

  openingFee Decimal
  amortizacionFee Decimal
  cancellationFee Decimal

  monthlyPayment Decimal
  monthlyLinkedProductCost Decimal
  totalInterest Decimal
  totalAmount Decimal

  bankOffer BankOffer @relation(fields: [bankOfferId], references: [id])
  bankOfferId String  @db.Uuid
  
  bankOfferLinkedCost  BankOfferLinkedCost[] 
}

model BankOfferLinkedCost {
  id   String         @id @default(uuid()) @db.Uuid
  type LinkedCostType

  cost Decimal
  costType CostFrequency

  bonus Decimal

  bankOfferSimulations  BankOfferSimulation[] 

}
